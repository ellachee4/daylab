{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import csv\n",
    "\n",
    "# File paths and names\n",
    "chambers_path = '/work/daylab/AV_for_coops/Chambers_data/'\n",
    "chambers_peak_path = 'work/daylab/fall-2024-coops/Chambers_data/'\n",
    "\n",
    "chambers_files = ['GSM3003540_Homo_all_w15_th-1_minus.hits.max.PDS.w50.35.bed',\n",
    "                  'GSM3003540_Homo_all_w15_th-1_minus.PDS.bw',\n",
    "                  'GSM3003540_Homo_all_w15_th-1_plus.hits.max.PDS.w50.35.bed',\n",
    "                  'GSM3003540_Homo_all_w15_th-1_plus.PDS.bw']\n",
    "\n",
    "# Calculate peak length for each peak in single bed file\n",
    "def calc_peak_lengths(input_file_name):\n",
    "    '''Calculate peak length and add column for each peak in bed file'''\n",
    "\n",
    "    output_file_name = input_file_name.replace('.bed', '_lengths.bed')\n",
    "    output_file_name.replace('AV_for_coops', 'fall-2024-coops')\n",
    "    with open(input_file_name, 'r') as infile, open(output_file_name, 'w') as outfile:\n",
    "        writer = csv.writer(outfile)\n",
    "        for row in infile:\n",
    "            columns = row.strip().split('\\t')\n",
    "            start = int(columns[1])\n",
    "            end = int(columns[2])\n",
    "            difference = end - start\n",
    "            # add difference column\n",
    "            writer.writerow(row+[difference])\n",
    "    \n",
    "    print(f'Calculated peak length for {input_file_name}')\n",
    "    return output_file_name\n",
    "\n",
    "# Calculate average peak length for single bed file\n",
    "def calc_average_peak_length(input_file_name):\n",
    "    '''Removes lines from a G4catchall BED file where the start site is greater than the end site'''\n",
    "\n",
    "    with open(input_file_name, 'r') as infile:\n",
    "        length = len(infile.readlines())\n",
    "        sum_peaks = 0\n",
    "        for row in infile:\n",
    "            columns = row.strip().split('\\t')\n",
    "            difference = int(columns[4])\n",
    "            sum_peaks += difference\n",
    "    \n",
    "    average_peak_length = sum_peaks / length\n",
    "\n",
    "    print(f'Average peak length for {input_file_name}: {average_peak_length} bp')\n",
    "    return average_peak_length\n",
    "\n",
    "# Calculate average peak length for each bed file in list\n",
    "def calc_all_avg_peaks(i):\n",
    "    '''Calculate average peak length for given bed file'''\n",
    "    bed_file = chambers_files[i]\n",
    "    bed_file_name = chambers_path + bed_file\n",
    "\n",
    "    # Calculate peak lengths for each peak in file\n",
    "    peak_lengths_file = calc_peak_lengths(bed_file_name)\n",
    "    \n",
    "    # Calculate average peak length for file\n",
    "    avg_peak_length = calc_average_peak_length(peak_lengths_file)\n",
    "    return avg_peak_length\n",
    "\n",
    "# For all files in list\n",
    "avg_peak_lengths = {}\n",
    "for i in range(len(chambers_files)):\n",
    "    avg_peak_length = calc_all_avg_peaks(i)\n",
    "    bed_file = chambers_files[i]\n",
    "    avg_peak_lengths.update({bed_file: avg_peak_length})\n",
    "avg_peak_lengths.to_csv('work/daylab/fall-2024-coops/Chambers_data/average_peak_lengths_chambers_data.csv')\n",
    "print('Average peak length of each file saved to average_peak_lengths_chambers_data.csv')"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
